apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"name":"mark50"},"name":"mark50","namespace":"default"},"spec":{"containers":[{"image":"nginx:alpine","name":"stark-industries-deployment","ports":[{"containerPort":80}],"resources":{}}]}}
  creationTimestamp: "2023-10-02T22:55:48Z"
  labels:
    name: mark50
  name: mark50
  namespace: shield
  resourceVersion: "793"
  uid: fb14544a-795f-4866-a977-d0092637c6ba
spec:
  containers:
  - image: nginx:alpine
    imagePullPolicy: IfNotPresent
    name: stark-industries-deployment
    ports:
    - containerPort: 80
      protocol: TCP
    livenessProbe:
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 10
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-jkdv5
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: kubelearn-cluster-worker2
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-jkdv5
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-10-02T22:55:48Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-10-02T22:56:08Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-10-02T22:56:08Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-10-02T22:55:48Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://a726bd53996831095ead3a9774186d4d3aad97d6246e29567300d9b600e970de
    image: docker.io/library/nginx:alpine
    imageID: docker.io/library/nginx@sha256:4c93a3bd8bf95412889dd84213570102176b6052d88bb828eaf449c56aca55ef
    lastState: {}
    name: stark-industries-deployment
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2023-10-02T22:56:07Z"
  hostIP: 172.18.0.4
  phase: Running
  podIP: 10.244.2.6
  podIPs:
  - ip: 10.244.2.6
  qosClass: BestEffort
  startTime: "2023-10-02T22:55:48Z"
